{
  "columnsSelection": {
    "mode": "ALL"
  },
  "explorationSampling": {
    "_refreshTrigger": 0,
    "selection": {
      "filter": {
        "distinct": false,
        "enabled": false
      },
      "latestPartitionsN": 1,
      "maxRecords": 10000,
      "ordering": {
        "rules": [],
        "enabled": false
      },
      "withinFirstN": -1,
      "partitionSelectionMethod": "ALL",
      "maxStoredBytes": 104857600,
      "targetRatio": 0.02,
      "maxReadUncompressedBytes": -1,
      "samplingMethod": "HEAD_SEQUENTIAL",
      "timeout": -1
    },
    "autoRefreshSample": false
  },
  "explorationFilters": [],
  "origin": "PREPARE_RECIPE",
  "exploreUIParams": {
    "autoRefresh": true
  },
  "steps": [
    {
      "preview": true,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "PythonUDF",
      "params": {
        "mode": "CELL",
        "envSelection": {
          "envMode": "INHERIT"
        },
        "stopOnError": true,
        "pythonSourceCode": "# Modify the process function to fit your needs\ndef process(row):\n    # In \u0027cell\u0027 mode, the process function must return\n    # a single cell value for each row,\n    # which will be affected to a new column.\n    # The \u0027row\u0027 argument is a dictionary of columns of the row\n    valueMap \u003d {\"R1\": 1, \"R2\": 2, \"R3\": 3, \"R4\": 4, \"R5\": 5, \"R6\": 6}\n    if row[\u0027Rank\u0027] in valueMap:\n        row[\u0027Rank\u0027] \u003d valueMap[row[\u0027Rank\u0027]]\n    else:\n        row[\u0027Rank\u0027] \u003d -1\n    return row[\u0027Rank\u0027]",
        "useKernel": true,
        "column": "RankInNum",
        "errorColumn": "rank_error",
        "sourceColumnsList": [
          "Rank"
        ],
        "usePythonUnicode": true,
        "vectorSize": 256,
        "vectorize": false
      },
      "alwaysShowComment": false
    }
  ],
  "maxProcessedMemTableBytes": -1,
  "previewMode": "ALL_ROWS",
  "vizSampling": {
    "_refreshTrigger": 0,
    "autoRefreshSample": false
  },
  "analysisColumnData": {},
  "columnWidthsByName": {
    "feature_5": 113,
    "feature_4": 113,
    "feature_3": 113,
    "feature_2": 113,
    "feature_1": 113,
    "category1": 100,
    "count": 100,
    "feature_0": 113,
    "Rank": 100,
    "rank_error": 100,
    "label": 100,
    "RankInNum": 100,
    "Date": 100,
    "rankInNumber": 105,
    "client": 100,
    "ID": 100
  },
  "sorting": [],
  "globalSearchQuery": "",
  "coloring": {
    "scheme": "MEANING_AND_STATUS",
    "individualColumns": [],
    "valueColoringMode": "HASH"
  }
}